@startuml
 -> beerocks_cli: beerocks_cli -c \n"bml_set_wifi_credentials <al-mac> <ssid> <network_key> [<radio>] [<bss_type>]"
beerocks_cli -> beerocks_cli: cli_bml::set_wifi_credentials_caller(args)
beerocks_cli -> beerocks_cli: cli_bml::set_wifi_credentials(\n args.stringArgs[0],\n args.stringArgs[1],\n args.stringArgs[2],\n args.stringArgs[3],\n args.stringArgs[4])
beerocks_cli -> beerocks_cli: bml_set_wifi_credentials(\n ctx,\n al-mac.c_str(),\n ssid.c_str(),\n network_key.c_str(),\n radio.c_str(),\n bss_type.c_str())
beerocks_cli -> bml_internal: set_wifi_credentials(\n const son::wireless_utils::sBssInfoConf &credentials,\n const sMacAddr &al_mac)
bml_internal -> controller: message_com::send_cmdu(\n m_sockMaster,\n ACTION_BML_WIFI_CREDENTIALS_ADD_REQUEST)
controller -> controller_db: add_bss_info_configuration(\n const sMacAddr &al_mac,\n const wireless_utils::sBssInfoConf &bss_info)
controller -> bml_internal: message_com::send_cmdu(\n m_sockMaster,\n ACTION_BML_WIFI_CREDENTIALS_ADD_RESPONSE)
@enduml
