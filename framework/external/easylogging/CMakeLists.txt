cmake_minimum_required (VERSION 2.8.12)

set(PROJECT_NAME elpp)
project(${PROJECT_NAME})

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
if(CMAKE_VERSION VERSION_LESS "3.1")
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
else()
	set(CMAKE_CXX_STANDARD 11)
endif()

add_definitions(-DELPP_THREAD_SAFE)
add_definitions(-DELPP_FORCE_USE_STD_THREAD)
add_definitions(-DELPP_NO_DEFAULT_LOG_FILE)
add_definitions(-DELPP_SYSLOG)

set(ELPP_DIR ${CMAKE_CURRENT_SOURCE_DIR})


add_library(${PROJECT_NAME} SHARED ${CMAKE_CURRENT_SOURCE_DIR}/easylogging++.cc)
set_target_properties(${PROJECT_NAME} PROPERTIES VERSION ${prplmesh_VERSION} SOVERSION ${prplmesh_VERSION_MAJOR})
target_include_directories(${PROJECT_NAME}
    PUBLIC
        $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>
        $<INSTALL_INTERFACE:include>
    )

install(TARGETS ${PROJECT_NAME} EXPORT elppConfig
    ARCHIVE  DESTINATION ${CMAKE_INSTALL_LIBDIR}
    LIBRARY  DESTINATION ${CMAKE_INSTALL_LIBDIR}
    RUNTIME  DESTINATION ${CMAKE_INSTALL_BINDIR})
install(FILES ${CMAKE_CURRENT_SOURCE_DIR}/easylogging++.h DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})
install(EXPORT elppConfig DESTINATION lib/cmake/${PROJECT_NAME})